// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package gopp

///// go:generate genny -in=$GOFILE -out=$GOFILE.gen.go gen "KeyType=string,int ValueType=string,int"

func Expand2Bool(v []bool) (bool, bool) {
	return v[0], v[1]
}

func Expand3Bool(v []bool) (bool, bool, bool) {
	return v[0], v[1], v[2]
}

func Expand4Bool(v []bool) (bool, bool, bool, bool) {
	return v[0], v[1], v[2], v[3]
}

func Expand5Bool(v []bool) (bool, bool, bool, bool, bool) {
	return v[0], v[1], v[2], v[3], v[4]
}

func Expand6Bool(v []bool) (bool, bool, bool, bool, bool, bool) {
	return v[0], v[1], v[2], v[3], v[4], v[5]
}

///// go:generate genny -in=$GOFILE -out=$GOFILE.gen.go gen "KeyType=string,int ValueType=string,int"

func Expand2Byte(v []byte) (byte, byte) {
	return v[0], v[1]
}

func Expand3Byte(v []byte) (byte, byte, byte) {
	return v[0], v[1], v[2]
}

func Expand4Byte(v []byte) (byte, byte, byte, byte) {
	return v[0], v[1], v[2], v[3]
}

func Expand5Byte(v []byte) (byte, byte, byte, byte, byte) {
	return v[0], v[1], v[2], v[3], v[4]
}

func Expand6Byte(v []byte) (byte, byte, byte, byte, byte, byte) {
	return v[0], v[1], v[2], v[3], v[4], v[5]
}

///// go:generate genny -in=$GOFILE -out=$GOFILE.gen.go gen "KeyType=string,int ValueType=string,int"

func Expand2Complex128(v []complex128) (complex128, complex128) {
	return v[0], v[1]
}

func Expand3Complex128(v []complex128) (complex128, complex128, complex128) {
	return v[0], v[1], v[2]
}

func Expand4Complex128(v []complex128) (complex128, complex128, complex128, complex128) {
	return v[0], v[1], v[2], v[3]
}

func Expand5Complex128(v []complex128) (complex128, complex128, complex128, complex128, complex128) {
	return v[0], v[1], v[2], v[3], v[4]
}

func Expand6Complex128(v []complex128) (complex128, complex128, complex128, complex128, complex128, complex128) {
	return v[0], v[1], v[2], v[3], v[4], v[5]
}

///// go:generate genny -in=$GOFILE -out=$GOFILE.gen.go gen "KeyType=string,int ValueType=string,int"

func Expand2Complex64(v []complex64) (complex64, complex64) {
	return v[0], v[1]
}

func Expand3Complex64(v []complex64) (complex64, complex64, complex64) {
	return v[0], v[1], v[2]
}

func Expand4Complex64(v []complex64) (complex64, complex64, complex64, complex64) {
	return v[0], v[1], v[2], v[3]
}

func Expand5Complex64(v []complex64) (complex64, complex64, complex64, complex64, complex64) {
	return v[0], v[1], v[2], v[3], v[4]
}

func Expand6Complex64(v []complex64) (complex64, complex64, complex64, complex64, complex64, complex64) {
	return v[0], v[1], v[2], v[3], v[4], v[5]
}

///// go:generate genny -in=$GOFILE -out=$GOFILE.gen.go gen "KeyType=string,int ValueType=string,int"

func Expand2Error(v []error) (error, error) {
	return v[0], v[1]
}

func Expand3Error(v []error) (error, error, error) {
	return v[0], v[1], v[2]
}

func Expand4Error(v []error) (error, error, error, error) {
	return v[0], v[1], v[2], v[3]
}

func Expand5Error(v []error) (error, error, error, error, error) {
	return v[0], v[1], v[2], v[3], v[4]
}

func Expand6Error(v []error) (error, error, error, error, error, error) {
	return v[0], v[1], v[2], v[3], v[4], v[5]
}

///// go:generate genny -in=$GOFILE -out=$GOFILE.gen.go gen "KeyType=string,int ValueType=string,int"

func Expand2Float32(v []float32) (float32, float32) {
	return v[0], v[1]
}

func Expand3Float32(v []float32) (float32, float32, float32) {
	return v[0], v[1], v[2]
}

func Expand4Float32(v []float32) (float32, float32, float32, float32) {
	return v[0], v[1], v[2], v[3]
}

func Expand5Float32(v []float32) (float32, float32, float32, float32, float32) {
	return v[0], v[1], v[2], v[3], v[4]
}

func Expand6Float32(v []float32) (float32, float32, float32, float32, float32, float32) {
	return v[0], v[1], v[2], v[3], v[4], v[5]
}

///// go:generate genny -in=$GOFILE -out=$GOFILE.gen.go gen "KeyType=string,int ValueType=string,int"

func Expand2Float64(v []float64) (float64, float64) {
	return v[0], v[1]
}

func Expand3Float64(v []float64) (float64, float64, float64) {
	return v[0], v[1], v[2]
}

func Expand4Float64(v []float64) (float64, float64, float64, float64) {
	return v[0], v[1], v[2], v[3]
}

func Expand5Float64(v []float64) (float64, float64, float64, float64, float64) {
	return v[0], v[1], v[2], v[3], v[4]
}

func Expand6Float64(v []float64) (float64, float64, float64, float64, float64, float64) {
	return v[0], v[1], v[2], v[3], v[4], v[5]
}

///// go:generate genny -in=$GOFILE -out=$GOFILE.gen.go gen "KeyType=string,int ValueType=string,int"

func Expand2Int(v []int) (int, int) {
	return v[0], v[1]
}

func Expand3Int(v []int) (int, int, int) {
	return v[0], v[1], v[2]
}

func Expand4Int(v []int) (int, int, int, int) {
	return v[0], v[1], v[2], v[3]
}

func Expand5Int(v []int) (int, int, int, int, int) {
	return v[0], v[1], v[2], v[3], v[4]
}

func Expand6Int(v []int) (int, int, int, int, int, int) {
	return v[0], v[1], v[2], v[3], v[4], v[5]
}

///// go:generate genny -in=$GOFILE -out=$GOFILE.gen.go gen "KeyType=string,int ValueType=string,int"

func Expand2Int16(v []int16) (int16, int16) {
	return v[0], v[1]
}

func Expand3Int16(v []int16) (int16, int16, int16) {
	return v[0], v[1], v[2]
}

func Expand4Int16(v []int16) (int16, int16, int16, int16) {
	return v[0], v[1], v[2], v[3]
}

func Expand5Int16(v []int16) (int16, int16, int16, int16, int16) {
	return v[0], v[1], v[2], v[3], v[4]
}

func Expand6Int16(v []int16) (int16, int16, int16, int16, int16, int16) {
	return v[0], v[1], v[2], v[3], v[4], v[5]
}

///// go:generate genny -in=$GOFILE -out=$GOFILE.gen.go gen "KeyType=string,int ValueType=string,int"

func Expand2Int32(v []int32) (int32, int32) {
	return v[0], v[1]
}

func Expand3Int32(v []int32) (int32, int32, int32) {
	return v[0], v[1], v[2]
}

func Expand4Int32(v []int32) (int32, int32, int32, int32) {
	return v[0], v[1], v[2], v[3]
}

func Expand5Int32(v []int32) (int32, int32, int32, int32, int32) {
	return v[0], v[1], v[2], v[3], v[4]
}

func Expand6Int32(v []int32) (int32, int32, int32, int32, int32, int32) {
	return v[0], v[1], v[2], v[3], v[4], v[5]
}

///// go:generate genny -in=$GOFILE -out=$GOFILE.gen.go gen "KeyType=string,int ValueType=string,int"

func Expand2Int64(v []int64) (int64, int64) {
	return v[0], v[1]
}

func Expand3Int64(v []int64) (int64, int64, int64) {
	return v[0], v[1], v[2]
}

func Expand4Int64(v []int64) (int64, int64, int64, int64) {
	return v[0], v[1], v[2], v[3]
}

func Expand5Int64(v []int64) (int64, int64, int64, int64, int64) {
	return v[0], v[1], v[2], v[3], v[4]
}

func Expand6Int64(v []int64) (int64, int64, int64, int64, int64, int64) {
	return v[0], v[1], v[2], v[3], v[4], v[5]
}

///// go:generate genny -in=$GOFILE -out=$GOFILE.gen.go gen "KeyType=string,int ValueType=string,int"

func Expand2Int8(v []int8) (int8, int8) {
	return v[0], v[1]
}

func Expand3Int8(v []int8) (int8, int8, int8) {
	return v[0], v[1], v[2]
}

func Expand4Int8(v []int8) (int8, int8, int8, int8) {
	return v[0], v[1], v[2], v[3]
}

func Expand5Int8(v []int8) (int8, int8, int8, int8, int8) {
	return v[0], v[1], v[2], v[3], v[4]
}

func Expand6Int8(v []int8) (int8, int8, int8, int8, int8, int8) {
	return v[0], v[1], v[2], v[3], v[4], v[5]
}

///// go:generate genny -in=$GOFILE -out=$GOFILE.gen.go gen "KeyType=string,int ValueType=string,int"

func Expand2Rune(v []rune) (rune, rune) {
	return v[0], v[1]
}

func Expand3Rune(v []rune) (rune, rune, rune) {
	return v[0], v[1], v[2]
}

func Expand4Rune(v []rune) (rune, rune, rune, rune) {
	return v[0], v[1], v[2], v[3]
}

func Expand5Rune(v []rune) (rune, rune, rune, rune, rune) {
	return v[0], v[1], v[2], v[3], v[4]
}

func Expand6Rune(v []rune) (rune, rune, rune, rune, rune, rune) {
	return v[0], v[1], v[2], v[3], v[4], v[5]
}

///// go:generate genny -in=$GOFILE -out=$GOFILE.gen.go gen "KeyType=string,int ValueType=string,int"

func Expand2String(v []string) (string, string) {
	return v[0], v[1]
}

func Expand3String(v []string) (string, string, string) {
	return v[0], v[1], v[2]
}

func Expand4String(v []string) (string, string, string, string) {
	return v[0], v[1], v[2], v[3]
}

func Expand5String(v []string) (string, string, string, string, string) {
	return v[0], v[1], v[2], v[3], v[4]
}

func Expand6String(v []string) (string, string, string, string, string, string) {
	return v[0], v[1], v[2], v[3], v[4], v[5]
}

///// go:generate genny -in=$GOFILE -out=$GOFILE.gen.go gen "KeyType=string,int ValueType=string,int"

func Expand2Uint(v []uint) (uint, uint) {
	return v[0], v[1]
}

func Expand3Uint(v []uint) (uint, uint, uint) {
	return v[0], v[1], v[2]
}

func Expand4Uint(v []uint) (uint, uint, uint, uint) {
	return v[0], v[1], v[2], v[3]
}

func Expand5Uint(v []uint) (uint, uint, uint, uint, uint) {
	return v[0], v[1], v[2], v[3], v[4]
}

func Expand6Uint(v []uint) (uint, uint, uint, uint, uint, uint) {
	return v[0], v[1], v[2], v[3], v[4], v[5]
}

///// go:generate genny -in=$GOFILE -out=$GOFILE.gen.go gen "KeyType=string,int ValueType=string,int"

func Expand2Uint16(v []uint16) (uint16, uint16) {
	return v[0], v[1]
}

func Expand3Uint16(v []uint16) (uint16, uint16, uint16) {
	return v[0], v[1], v[2]
}

func Expand4Uint16(v []uint16) (uint16, uint16, uint16, uint16) {
	return v[0], v[1], v[2], v[3]
}

func Expand5Uint16(v []uint16) (uint16, uint16, uint16, uint16, uint16) {
	return v[0], v[1], v[2], v[3], v[4]
}

func Expand6Uint16(v []uint16) (uint16, uint16, uint16, uint16, uint16, uint16) {
	return v[0], v[1], v[2], v[3], v[4], v[5]
}

///// go:generate genny -in=$GOFILE -out=$GOFILE.gen.go gen "KeyType=string,int ValueType=string,int"

func Expand2Uint32(v []uint32) (uint32, uint32) {
	return v[0], v[1]
}

func Expand3Uint32(v []uint32) (uint32, uint32, uint32) {
	return v[0], v[1], v[2]
}

func Expand4Uint32(v []uint32) (uint32, uint32, uint32, uint32) {
	return v[0], v[1], v[2], v[3]
}

func Expand5Uint32(v []uint32) (uint32, uint32, uint32, uint32, uint32) {
	return v[0], v[1], v[2], v[3], v[4]
}

func Expand6Uint32(v []uint32) (uint32, uint32, uint32, uint32, uint32, uint32) {
	return v[0], v[1], v[2], v[3], v[4], v[5]
}

///// go:generate genny -in=$GOFILE -out=$GOFILE.gen.go gen "KeyType=string,int ValueType=string,int"

func Expand2Uint64(v []uint64) (uint64, uint64) {
	return v[0], v[1]
}

func Expand3Uint64(v []uint64) (uint64, uint64, uint64) {
	return v[0], v[1], v[2]
}

func Expand4Uint64(v []uint64) (uint64, uint64, uint64, uint64) {
	return v[0], v[1], v[2], v[3]
}

func Expand5Uint64(v []uint64) (uint64, uint64, uint64, uint64, uint64) {
	return v[0], v[1], v[2], v[3], v[4]
}

func Expand6Uint64(v []uint64) (uint64, uint64, uint64, uint64, uint64, uint64) {
	return v[0], v[1], v[2], v[3], v[4], v[5]
}

///// go:generate genny -in=$GOFILE -out=$GOFILE.gen.go gen "KeyType=string,int ValueType=string,int"

func Expand2Uint8(v []uint8) (uint8, uint8) {
	return v[0], v[1]
}

func Expand3Uint8(v []uint8) (uint8, uint8, uint8) {
	return v[0], v[1], v[2]
}

func Expand4Uint8(v []uint8) (uint8, uint8, uint8, uint8) {
	return v[0], v[1], v[2], v[3]
}

func Expand5Uint8(v []uint8) (uint8, uint8, uint8, uint8, uint8) {
	return v[0], v[1], v[2], v[3], v[4]
}

func Expand6Uint8(v []uint8) (uint8, uint8, uint8, uint8, uint8, uint8) {
	return v[0], v[1], v[2], v[3], v[4], v[5]
}

///// go:generate genny -in=$GOFILE -out=$GOFILE.gen.go gen "KeyType=string,int ValueType=string,int"

func Expand2Uintptr(v []uintptr) (uintptr, uintptr) {
	return v[0], v[1]
}

func Expand3Uintptr(v []uintptr) (uintptr, uintptr, uintptr) {
	return v[0], v[1], v[2]
}

func Expand4Uintptr(v []uintptr) (uintptr, uintptr, uintptr, uintptr) {
	return v[0], v[1], v[2], v[3]
}

func Expand5Uintptr(v []uintptr) (uintptr, uintptr, uintptr, uintptr, uintptr) {
	return v[0], v[1], v[2], v[3], v[4]
}

func Expand6Uintptr(v []uintptr) (uintptr, uintptr, uintptr, uintptr, uintptr, uintptr) {
	return v[0], v[1], v[2], v[3], v[4], v[5]
}
